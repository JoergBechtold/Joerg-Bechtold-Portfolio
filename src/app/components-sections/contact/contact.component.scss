@use "../../../assets/styles/variables.scss" as *;
@use "../../../assets/styles/mixins.scss" as *;
@use "../../../assets/styles/animations.scss" as *;

section {
  @include commonSectionStyles($hei-mob: unset);
  @include paddingTopMinWidthBreakpoint();
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0px 1000px $primary-bg-gray inset !important;
  -webkit-text-fill-color: white !important;
}

.contact-content {
  @include commonContentStyle($jc: unset, $ai: center, $overfl-y: clip);
  flex-direction: column;

  > img {
    position: absolute;
    left: clamp(-480px, -558.75px + 22.5vw, -345px);
    bottom: clamp(-435px, -519.5833px + 24.1667vw, -290px);
    width: 850px;
  }
}

.arrow-scroll-top {
  opacity: 0;
  transform: translate(50%, 0);

  position: absolute;
  bottom: clamp(45px, -150.8955px + 15.6716vw, 150px);
  right: clamp(45px, -150.8955px + 15.6716vw, 150px);
  width: 55px;
  aspect-ratio: 1 / 1;
  display: grid;
  place-items: center;
  cursor: pointer;
  transition: all 0.3s ease-in-out;

  > svg {
    height: 100%;
    width: 100%;
    animation: svgGlow 2.5s infinite alternate;

    rect {
      stroke: $white;
      transition: stroke 0.3s ease-in-out;
    }

    path {
      fill: $white;
      transition: fill 0.3s ease-in-out;
    }
  }

  &:hover {
    transform: translateY(-5px);

    > svg {
      rect {
        stroke: $primary-bg-green;
      }

      path {
        fill: $primary-bg-green;
      }
    }
  }
}

.headline-box {
  padding-top: 25px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  width: 100%;
}

.h1-vector-box {
  width: fit-content;
  opacity: 0;
  transform: translate(-50%, 0);

  > h1 {
    @include dFlexAllCenter();
    position: relative;
    @include fontSizeWeightColor($si: var(--font-size-45-90), $we: 700);

    &::before {
      content: "";
      position: absolute;
      right: 108%;
      display: block;
      width: 800px;
      height: 4px;
      background-color: $primary-bg-purple;
      border-radius: 4px;
    }
  }
}

.contact-section {
  @include dFlexAllCenter(
    $ai: center,
    $jc: center,
    $g: var(--gap-row-portfolio-section)
  );

  padding-inline: clamp(25px, 11.6667px + 4.1667vw, 50px);
  padding-top: clamp(25px, 22px + 0.9375vw, 40px);
  width: 100%;

  @media screen and (max-width: $breakboint-width-1250) {
    padding-bottom: 170px;
  }

  @media screen and (max-height: $responsive-height-814) {
    padding-bottom: 130px;
  }
}

.contact-box {
  @include dFlexAllCenter($ai: unset, $g: var(--gap-column-portfolio-section));
  width: 1200px;

  @media screen and (max-width: $breakboint-width-1250) {
    flex-direction: column;
    align-items: center;
  }

  @media screen and (max-height: $responsive-height-814) {
    flex-direction: column;
    align-items: center;
  }

  @media screen and (max-width: $breakpoint-width-920) {
    gap: 30px;
  }
}

.left-box {
  flex: 1;
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;

  @media screen and (max-width: $breakboint-width-1250) {
    flex: unset;
    width: 535px;
  }

  @media screen and (max-height: $responsive-height-814) {
    flex: unset;
    width: 535px;
  }

  @media screen and (max-width: $breakboint-width-640) {
    width: 100%;
  }
}

.left-text-box {
  height: 100%;

  > h2 {
    transform: translate(0, 30px);
    opacity: 0;
    @include fontSizeWeightColor($si: 32px, $we: 700);
  }

  > p {
    transform: translate(0, 30px);
    opacity: 0;
    @include fontSizeWeightColor($si: 16px, $we: 400);
  }

  @media screen and (max-width: $breakboint-width-1250) {
  }
}

.right-box {
  flex: 1;
  width: 535px;
  position: relative;

  @media screen and (max-width: $breakboint-width-1250) {
    flex: unset;
  }

  @media screen and (max-width: $breakboint-width-640) {
    width: 100%;
  }
}

form {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 35px;
  caret-color: $primary-bg-green;

  @media screen and (max-width: $breakboint-width-380) {
    gap: 50px;
  }
}

.form-group {
  position: relative;
  width: 100%;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.invalid-border {
  border-color: $not-valide-red !important;
}

input[type="text"] {
  opacity: 0;
  transform: translate(50%, 0);
}
input[type="email"] {
  opacity: 0;
  transform: translate(50%, 0);
}

textarea {
  opacity: 0;
  transform: translate(50%, 0);
}

input[type="text"],
input[type="email"] {
  height: 50px;
}

input[type="text"],
input[type="email"],
textarea {
  width: 100%;
  padding: 15px;
  border: 1px solid $primary-bg-purple;
  border-radius: 5px;
  background-color: $primary-bg-gray;
  @include fontSizeWeightColor($si: 16px, $we: 400);
  outline: none;
  transition: border-color 0.3s ease;
  padding-right: 45px;

  &:focus {
    border-color: $primary-bg-green;
  }

  &:hover {
    border-color: $primary-bg-green;
  }

  &::placeholder {
    color: white;
  }

  &.ng-valid.ng-touched {
    border-color: $primary-bg-green;
  }
}

.validation-icon {
  position: absolute;
  right: 15px;
  top: 13px;
  width: 24px;
  height: 24px;
  pointer-events: none;
  z-index: 2;
}

.error-message {
  @include errorMessage($bot: unset);
}

.error-message-checkbox {
  @include errorMessage($bot: -64%);
}

textarea {
  resize: unset;
  min-height: 189px;
}

.privacy-checkbox {
  opacity: 0;
  transform: translate(50%, 0);

  display: flex;
  align-items: flex-start;
  gap: 10px;

  input[type="checkbox"] {
    width: 24px;
    height: 24px;
    min-width: 24px;
    appearance: none;
    cursor: pointer;
    position: relative;
    top: 0px;
    border: none;
    background-color: transparent;
    outline: none;
    margin: 0;
    padding: 0;
    display: block;

    background-image: url('data:image/svg+xml;utf8,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><mask id="mask0_41963_3098" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24"><rect width="24" height="24" fill="%23797EF3"/></mask><g mask="url(%23mask0_41963_3098)"><path d="M5 21C4.45 21 3.97917 20.8042 3.5875 20.4125C3.19583 20.0208 3 19.55 3 19V5C3 4.45 3.19583 3.97917 3.5875 3.5875C3.97917 3.19583 4.45 3 5 3H19C19.55 3 20.0208 3.19583 20.4125 3.5875C20.8042 3.97917 21 4.45 21 5V19C21 19.55 20.8042 20.0208 20.4125 20.4125C20.0208 20.8042 19.55 21 19 21H5ZM5 19H19V5H5V19Z" fill="%2370E61C"/></g></svg>');
    background-size: contain;
    background-repeat: no-repeat;
    background-position: center;
    transition: background-image 0.2s ease;
    // &.ng-invalid.ng-touched {
    //   background-image: url('data:image/svg+xml;utf8,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><mask id="mask0_41963_3098" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24"><rect width="24" height="24" fill="%23797EF3"/></mask><g mask="url(%23mask0_41963_3098)"><path d="M5 21C4.45 21 3.97917 20.8042 3.5875 20.4125C3.19583 20.0208 3 19.55 3 19V5C3 4.45 3.19583 3.97917 3.5875 3.5875C3.97917 3.19583 4.45 3 5 3H19C19.55 3 20.0208 3.19583 20.4125 3.5875C20.8042 3.97917 21 4.45 21 5V19C21 19.55 20.8042 20.0208 20.4125 20.4125C20.0208 20.8042 19.55 21 19 21H5ZM5 19H19V5H5V19Z" fill="%23E61C40"/></g></svg>');
    // }
    &.is-error-displayed {
      background-image: url('data:image/svg+xml;utf8,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><mask id="mask0_41963_3098" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24"><rect width="24" height="24" fill="%23797EF3"/></mask><g mask="url(%23mask0_41963_3098)"><path d="M5 21C4.45 21 3.97917 20.8042 3.5875 20.4125C3.19583 20.0208 3 19.55 3 19V5C3 4.45 3.19583 3.97917 3.5875 3.5875C3.97917 3.19583 4.45 3 5 3H19C19.55 3 20.0208 3.19583 20.4125 3.5875C20.8042 3.97917 21 4.45 21 5V19C21 19.55 20.8042 20.0208 20.4125 20.4125C20.0208 20.8042 19.55 21 19 21H5ZM5 19H19V5H5V19Z" fill="%23E61C40"/></g></svg>'); /* Roter Rahmen für ungültige Checkbox */
    }

    &:hover {
      background-image: url('data:image/svg+xml;utf8,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="24" height="24" rx="12" fill="%23183771"/><mask id="mask0_41963_3101" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24"><rect width="24" height="24" fill="%23797EF3"/></mask><g mask="url(%23mask0_41963_3101)"><path d="M5 21C4.45 21 3.97917 20.8042 3.5875 20.4125C3.19583 20.0208 3 19.55 3 19V5C3 4.45 3.19583 3.97917 3.5875 3.5875C3.97917 3.19583 4.45 3 5 3H19C19.55 3 20.0208 3.19583 20.4125 3.5875C20.8042 3.97917 21 4.45 21 5V19C21 19.55 20.8042 20.0208 20.4125 20.4125C20.0208 20.8042 19.55 21 19 21H5ZM5 19H19V5H5V19Z" fill="%2370E61C"/></g></svg>');
    }

    &:checked {
      background-image: url('data:image/svg+xml;utf8,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><mask id="mask0_41963_3104" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24"><rect width="24" height="24" fill="%23797EF3"/></mask><g mask="url(%23mask0_41963_3104)"><path d="M10.6 13.4L8.45 11.25C8.26667 11.0667 8.03333 10.975 7.75 10.975C7.46667 10.975 7.23333 11.0667 7.05 11.25C6.86667 11.4333 6.775 11.6667 6.775 11.95C6.775 12.2333 6.86667 12.4667 7.05 12.65L9.9 15.5C10.1 15.7 10.3333 15.8 10.6 15.8C10.8667 15.8 11.1 15.7 11.3 15.5L16.95 9.85C17.1333 9.66667 17.225 9.43333 17.225 9.15C17.225 8.86667 17.1333 8.63333 16.95 8.45C16.7667 8.26667 16.5333 8.175 16.25 8.175C15.9667 8.175 15.7333 8.26667 15.55 8.45L10.6 13.4ZM5 21C4.45 21 3.97917 20.8042 3.5875 20.4125C3.19583 20.0208 3 19.55 3 19V5C3 4.45 3.19583 3.97917 3.5875 3.5875C3.97917 3.19583 4.45 3 5 3H19C19.55 3 20.0208 3.19583 20.4125 3.5875C20.8042 3.97917 21 4.45 21 5V19C21 19.55 20.8042 20.0208 20.4125 20.4125C20.0208 20.8042 19.55 21 19 21H5ZM5 19H19V5H5V19Z" fill="%2370E61C"/></g></svg>');
    }

    &:checked:hover {
      background-image: url('data:image/svg+xml;utf8,<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><rect width="24" height="24" rx="12" fill="%23183771"/><mask id="mask0_41963_3107" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24"><rect width="24" height="24" fill="%23797EF3"/></mask><g mask="url(%23mask0_41963_3107)"><path d="M10.6 13.4L8.45 11.25C8.26667 11.0667 8.03333 10.975 7.75 10.975C7.46667 10.975 7.23333 11.0667 7.05 11.25C6.86667 11.4333 6.775 11.6667 6.775 11.95C6.775 12.2333 6.86667 12.4667 7.05 12.65L9.9 15.5C10.1 15.7 10.3333 15.8 10.6 15.8C10.8667 15.8 11.1 15.7 11.3 15.5L16.95 9.85C17.1333 9.66667 17.225 9.43333 17.225 9.15C17.225 8.86667 17.1333 8.63333 16.95 8.45C16.7667 8.26667 16.5333 8.175 16.25 8.175C15.9667 8.175 15.7333 8.26667 15.55 8.45L10.6 13.4ZM5 21C4.45 21 3.97917 20.8042 3.5875 20.4125C3.19583 20.0208 3 19.55 3 19V5C3 4.45 3.19583 3.97917 3.5875 3.5875C3.97917 3.19583 4.45 3 5 3H19C19.55 3 20.0208 3.19583 20.4125 3.5875C20.8042 3.97917 21 4.45 21 5V19C21 19.55 20.8042 20.0208 20.4125 20.4125C20.0208 20.8042 19.55 21 19 21H5ZM5 19H19V5H5V19Z" fill="%2370E61C"/></g></svg>');
    }
  }

  > label {
    @include fontSizeWeightColor($si: 14px, $we: 400);

    > p > a {
      color: $primary-bg-purple;
      text-decoration: none;
      &:hover {
        text-decoration: underline;
        cursor: pointer;
      }
    }
  }
}

.submit-button {
  @include primaryButton(top, center);
  margin-top: 8px;
  opacity: 0;
  transform: translate(50%, 0);

  &:disabled {
    opacity: 0;
    transform: translate(50%, 0);
    cursor: not-allowed;
    background-color: #cccccc;
    color: #666666;
    box-shadow: none;
    transform: none;
  }
}

.email-sent-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 5;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.4s ease-in-out, visibility 0.4s ease-in-out;

  &.show {
    opacity: 1;
    visibility: visible;
  }

  .overlay-content {
    background-color: $primary-bg-gray;
    padding: 40px;
    border-radius: 12px;
    text-align: center;
    max-width: 500px;
    width: 90%;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
    transform: scale(0.8);
    opacity: 0;
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55),
      opacity 0.4s ease-in-out;
  }

  &.show .overlay-content {
    transform: scale(1);
    opacity: 1;
  }

  .check-icon {
    width: 80px;
    height: 80px;
    color: $primary-bg-green;
    stroke-width: 2.5;
    margin-bottom: 20px;
    animation: bounceIn 0.8s ease-out forwards;
  }

  h2 {
    @include fontSizeWeightColor($si: 32px, $we: 700);
    margin-bottom: 15px;
  }

  p {
    @include fontSizeWeightColor($si: 18px, $we: 400);
    margin-bottom: 30px;
  }

  .close-overlay-btn {
    @include primaryButton($tra-ori-x: top, $tra-ori-y: center);
  }
}

.headline-box.animate {
  .h1-vector-box {
    @include headlinePorfolioAnimation(h1VectorBoxContact);
  }
}

.left-text-box.animate {
  > h2 {
    animation: leftTextBox var(--animation-time-portfolio) ease-out forwards;
    animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
  }
  > p {
    animation: leftTextBox var(--animation-time-portfolio) ease-out forwards;
    animation-delay: calc(var(--project-animation-delay, 0s) + 0.5s);
  }
}

input[type="text"].animate {
  animation: form var(--animation-time-portfolio) ease-out forwards;
  animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
}
input[type="email"].animate {
  animation: form var(--animation-time-portfolio) ease-out forwards;
  animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
}

.privacy-checkbox.animate {
  animation: form var(--animation-time-portfolio) ease-out forwards;
  animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
}

textarea.animate {
  animation: form var(--animation-time-portfolio) ease-out forwards;
  animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
}

label.animate {
  animation: form var(--animation-time-portfolio) ease-out forwards;
  animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
}

.submit-button.animate {
  animation: form var(--animation-time-portfolio) ease-out forwards;
  animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
}

.submit-button:disabled.animate {
  animation: form var(--animation-time-portfolio) ease-out forwards;
  animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
}

.arrow-scroll-top.animate {
  animation: leftTextBox var(--animation-time-portfolio) ease-out forwards;
  animation-delay: calc(var(--project-animation-delay, 0s) + 0.2s);
}
