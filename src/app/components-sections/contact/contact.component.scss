@use "../../../assets/styles/variables.scss" as *;
@use "../../../assets/styles/mixins.scss" as *;
@use "../../../assets/styles/animations.scss" as *;

section {
  @include commonSectionStyles();
  @include paddingTopMinWidthBreakpoint();
}

.contact-content {
  @include commonContentStyle($jc: unset, $ai: center);
  flex-direction: column;

  > img {
    position: absolute;
    left: -345px;
    bottom: -290px;
    width: 850px;

    @media screen and (max-width: $breakpoint-width-920) {
    }
  }
}

.arrow-scroll-top {
  position: absolute;
  bottom: 150px;
  right: 150px;
  width: 55px;
  aspect-ratio: 1 / 1;
  display: grid;
  place-items: center;
  cursor: pointer;
  transition: all 0.3s ease-in-out;

  > svg {
    height: 100%;
    width: 100%;
    animation: svgGlow 2.5s infinite alternate;

    rect {
      stroke: $white;
      transition: stroke 0.3s ease-in-out;
    }

    path {
      fill: $white;
      transition: fill 0.3s ease-in-out;
    }
  }

  &:hover {
    transform: translateY(-5px);

    > svg {
      rect {
        stroke: $primary-bg-green;
      }

      path {
        fill: $primary-bg-green;
      }
    }
  }
}

.headline-box {
  padding-top: 25px;
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 20px;
  width: 100%;
}

.h1-vector-box {
  width: fit-content;

  > h1 {
    @include dFlexAllCenter();
    position: relative;
    @include fontSizeWeightColor($si: var(--font-size-45-90), $we: 700);

    &::before {
      content: "";
      position: absolute;
      right: 108%;
      display: block;
      width: 800px;
      height: 4px;
      background-color: $primary-bg-purple;
      border-radius: 4px;
    }
  }
}

.contact-section {
  @include dFlexAllCenter(
    $ai: center,
    $jc: center,
    $g: var(--gap-row-portfolio-section)
  );

  padding-inline: clamp(25px, 11.6667px + 4.1667vw, 50px);
  padding-top: clamp(25px, -3.2667px + 8.8333vw, 78px);
  width: 100%;
}

.contact-box {
  @include dFlexAllCenter($ai: unset, $g: var(--gap-column-portfolio-section));
  width: 1200px;

  @media screen and (max-width: $breakpoint-width-920) {
    gap: 30px;
  }
}

.left-box {
  flex: 1;
  display: flex;
  align-items: flex-start;
  justify-content: flex-start;
}

.left-text-box {
  height: 100%;

  > h2 {
    @include fontSizeWeightColor($si: 32px, $we: 700);
  }

  > p {
    @include fontSizeWeightColor($si: 16, $we: 400);
  }
}

.right-box {
  flex: 1;
  background-color: $primary-bg-gray; // Same as section background for seamless look

  max-width: 500px;
  width: 100%;
}

.contact-form {
  display: flex;
  flex-direction: column;
  gap: 20px; // Space between form groups
}

.form-group {
  position: relative;
}

.visually-hidden {
  position: absolute;
  width: 1px;
  height: 1px;
  margin: -1px;
  padding: 0;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

input[type="text"],
input[type="email"],
textarea {
  width: 100%;
  padding: 15px;
  border: 1px solid $primary-bg-purple;
  border-radius: 5px;
  background-color: $primary-bg-gray;
  @include fontSizeWeightColor($si: 16, $we: 400);
  outline: none;
  transition: border-color 0.3s ease;

  &:focus {
    border-color: $primary-bg-green;
  }

  &:hover {
    border-color: $primary-bg-green;
  }

  &::placeholder {
    color: white;
  }
}

textarea {
  resize: unset;
  min-height: 152px;
}

.privacy-checkbox {
  display: flex;
  align-items: flex-start;
  gap: 10px;

  input[type="checkbox"] {
    width: 20px; // Adjust checkbox size
    height: 20px;
    min-width: 20px; // Prevent shrinking on flex container
    border: 1px solid $primary-bg-purple;
    background-color: $primary-bg-gray;
    appearance: none; // Hide default checkbox
    cursor: pointer;
    position: relative;
    top: 2px;

    &:hover {
      border-color: $primary-bg-green; // For potential future absolute positioning of labels or icons
    } // Slightly adjust vertical alignment with text

    &:checked {
      background-color: $primary-bg-purple; // Fill with purple when checked
      border-color: $primary-bg-purple;

      &::after {
        content: "\2713"; // Unicode checkmark
        display: block;
        color: white;
        font-size: 14px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
    }
  }

  label {
    color: white;
    font-size: 0.95rem;

    .privacy-link {
      color: $primary-bg-purple;
      text-decoration: none; // No underline
      &:hover {
        text-decoration: underline; // Underline on hover
      }
    }
  }
}

.submit-button {
  padding: $padding-block-11-15 $padding-inline-24-30 $padding-block-11-15
    $padding-inline-24-30;
  border-radius: 10px;
  box-shadow: 4px 4px 4px 0px #00000040;
  transition: var(--transition-btn);

  background-color: gray;

  // padding-block: $padding-block-11-15;
  // padding-inline: $padding-inline-24-30;
  border: none;
  // border-radius: 10px;
  @include fontSizeWeightColor($si: $font-size-18-23, $we: 400);

  cursor: pointer;
  transition: background-color 0.3s ease, transform 0.2s ease; // Smooth transitions

  &:hover {
    background-color: darken(gray, 10%); // Slightly darker on hover
    transform: translateY(-2px); // Slight lift effect
  }

  &:active {
    transform: translateY(0); // Reset on click
  }
}

.email-sent-overlay {
  position: fixed; /* Fixiert über allem */
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(
    0,
    0,
    0,
    0.8
  ); /* Dunkler, leicht transparenter Hintergrund */
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000; /* Stellt sicher, dass es über anderen Elementen liegt */
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.4s ease-in-out, visibility 0.4s ease-in-out;

  &.show {
    opacity: 1;
    visibility: visible;
  }

  .overlay-content {
    background-color: $primary-bg-gray;
    padding: 40px;
    border-radius: 12px;
    text-align: center;
    max-width: 500px;
    width: 90%;
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.4);
    transform: scale(0.8); /* Startgröße für die Animation */
    opacity: 0; /* Start-Transparenz für die Animation */
    transition: transform 0.4s cubic-bezier(0.68, -0.55, 0.27, 1.55),
      /* Coole Feder-Animation */ opacity 0.4s ease-in-out;
  }

  &.show .overlay-content {
    transform: scale(1); /* Endgröße */
    opacity: 1; /* End-Transparenz */
  }

  .check-icon {
    width: 80px;
    height: 80px;
    color: $primary-bg-green; /* Grüne Farbe für den Haken */
    stroke-width: 2.5;
    margin-bottom: 20px;
    animation: bounceIn 0.8s ease-out forwards; /* Animation für den Haken */
  }

  h2 {
    @include fontSizeWeightColor($si: 2.2rem, $we: 700, $co: $white);
    margin-bottom: 15px;
  }

  p {
    @include fontSizeWeightColor($si: 1.1rem, $co: lighten($white, 20%));
    margin-bottom: 30px;
  }

  .close-overlay-btn {
    @include primaryButton(
      $tra-ori-x: center,
      $tra-ori-y: center
    ); /* Nutze dein bestehendes Button-Mixin */
    padding: 12px 30px;
    font-size: 1rem;
  }
}

@keyframes bounceIn {
  0% {
    transform: scale(0.1);
    opacity: 0;
  }
  60% {
    transform: scale(1.1);
    opacity: 1;
  }
  80% {
    transform: scale(0.9);
  }
  100% {
    transform: scale(1);
  }
}
